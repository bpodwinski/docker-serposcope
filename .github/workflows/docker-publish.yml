name: Docker

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06
        with:
          cosign-release: "v2.1.1"

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: benoitpodwinski/serposcope

      - name: Build and push multi-arch Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/armhf
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            BASE_IMAGE=ubuntu:24.04
          tags: |
            benoitpodwinski/serposcope:latest
            benoitpodwinski/serposcope:amd64-latest
            benoitpodwinski/serposcope:arm64-latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Docker image for armhf (Ubuntu 22.04)
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/armhf
          push: true
          build-args: |
            BASE_IMAGE=ubuntu:22.04
          tags: |
            benoitpodwinski/serposcope:armhf-latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
